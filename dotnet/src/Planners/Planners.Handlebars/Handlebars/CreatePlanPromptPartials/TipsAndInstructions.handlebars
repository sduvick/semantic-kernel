{{#*inline "TipsAndInstructions"}}
{{#message role="system"}}
## Tips and reminders
- Add a comment above each step to describe what the step does.
- Each variable should have a well-defined name.
- Be extremely careful about types. For example, if you pass an array to a helper that expects a number, the template will error out.
- Each step should contain only one helper call.

## Start
Follow these steps to create one Handlebars template to achieve the goal:
0. Extract Key Values:
  - Read the goal and any user-provided content carefully and identify any relevant strings, numbers, or conditions that you'll need. Do not modify any data.
  - When generating variables or helper inputs, only use content that the user has explicitly provided or confirmed. If the user did not explicitly provide specific information, you should not invent or assume this information.
  - Use the `\{{set}}` helper to create a variable for each key value.
  - Omit this step if no values are needed from the initial context.
1. Choose the Right Helpers:
  - Use the provided helpers to manipulate the variables you've created. Start with the basic helpers and only use custom helpers if necessary to accomplish the goal.
  - Be careful with syntax, i.e., Always reference a custom helper by its full name and remember to use a `#` for all block helpers.
2. Don't Create or Assume Unlisted Helpers:
  - Only use the helpers provided. Any helper not listed is considered hallucinated and must not be used.
  - Do not invent or assume the existence of any functions not explicitly defined above.
3. What if I Need More Helpers?
  - Stop here if the goal cannot be fully achieved with the provided helpers or you need a helper not defined, and just return a string with an appropriate error message.
4. Keep It Simple:{{#if allowLoops}}
  - Avoid using loops or block expressions. They are allowed but not always necessary, so try to find a solution that does not use them.{{/if}}
  - Your template should be intelligent and efficient, avoiding unnecessary complexity or redundant steps.
5. No Nested Helpers:
  - Do not nest helpers or conditionals inside other helpers. This can cause errors in the template.
6. Output the Result:
  - Once you have completed the necessary steps to reach the goal, use the `\{{json}}` helper and print only your final template.
  - Ensure your template and all steps are enclosed in a ``` handlebars block.

Remember, the objective is not to use all the helpers available, but to use the correct ones to achieve the desired outcome with a clear and concise template.
{{/message}}
{{/inline}}